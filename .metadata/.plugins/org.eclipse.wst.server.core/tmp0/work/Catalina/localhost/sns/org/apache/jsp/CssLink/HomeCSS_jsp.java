/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-18 13:21:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.CssLink;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class HomeCSS_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("   \r\n");
      out.write("   /* 무한 스크롤 */\r\n");
      out.write("   html, body{\r\n");
      out.write("      margin: 0;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   h1 {\r\n");
      out.write("     position: fixed; \r\n");
      out.write("     top: 0; \r\n");
      out.write("     width: 100%; \r\n");
      out.write("     height: 60px; \r\n");
      out.write("     text-align: center; \r\n");
      out.write("     background: white; \r\n");
      out.write("     margin: 0; \r\n");
      out.write("     line-height: 60px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /* 게시글 사진 */\r\n");
      out.write("   img {\r\n");
      out.write("      width: 500px;\r\n");
      out.write("      height: 500px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /* 게시글 내부 요소들 왼쪽 여백 */\r\n");
      out.write("   .sort {\r\n");
      out.write("      padding-left: 10px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   /* 맨위로 버튼 */\r\n");
      out.write("   #toTop{\r\n");
      out.write("      background:none; \r\n");
      out.write("      position:fixed; \r\n");
      out.write("      bottom:50px; right:800px; \r\n");
      out.write("      cursor:pointer; \r\n");
      out.write("      text-decoration:none; \r\n");
      out.write("      border-radius:20px; \r\n");
      out.write("      -moz-border-radius:20px; \r\n");
      out.write("      -webkit-border-radius:5px;\r\n");
      out.write("   } \r\n");
      out.write("    \r\n");
      out.write("   /* 모달 좋아요 */\r\n");
      out.write("   .modal-body::-webkit-scrollbar {\r\n");
      out.write("      width: 15px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-body::-webkit-scrollbar-thumb {\r\n");
      out.write("      background-color: #6667AB;\r\n");
      out.write("      border-radius: 10px;\r\n");
      out.write("      background-clip: padding-box;\r\n");
      out.write("      border: 2px solid transparent;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .modal-body::-webkit-scrollbar-track {\r\n");
      out.write("      background-color: #c1c1f7; \r\n");
      out.write("      background-color: white;\r\n");
      out.write("      border-radius: 10px;\r\n");
      out.write("      box-shadow: inset 0px 0px 5px white;\r\n");
      out.write("   }\r\n");
      out.write(" \r\n");
      out.write("    /* 섹션 다음 div*/\r\n");
      out.write("    .sectionDiv {\r\n");
      out.write("       width: 502px; \r\n");
      out.write("       border: 1px solid #6667AB; \r\n");
      out.write("       border-radius: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("   /* 캐러셀 이전, 다음 버튼 */\r\n");
      out.write("    .carousel-control-next, .carousel-control-prev {\r\n");
      out.write("       height: 500px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 캐러셀 사진 하단 가로 막대기 */\r\n");
      out.write("    .carousel-indicators {\r\n");
      out.write("       height: 40px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #button4 {\r\n");
      out.write("       margin-top: -15px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 좋아요(모달), 댓글(모달), 공유(모달), 게시물 저장 버튼 */\r\n");
      out.write("    .bi-heart, .bi-chat-dots, .bi-share, .bi-bookmark-plus {\r\n");
      out.write("       font-size: 25px;\r\n");
      out.write("       color: #6667AB;\r\n");
      out.write("       cursor: pointer;\r\n");
      out.write("       margin-right: 20px;\r\n");
      out.write("       -webkit-text-stroke: 1px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 게시물 저장 버튼 */\r\n");
      out.write("    .bi-bookmark-plus {\r\n");
      out.write("       float: right; \r\n");
      out.write("       padding-right: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 좋아요, 댓글 모달 버튼 */\r\n");
      out.write("    .modalButton {\r\n");
      out.write("       margin-top: -5px; \r\n");
      out.write("       color: #6667AB;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 게시글 내용 */\r\n");
      out.write("    #boardContent {\r\n");
      out.write("       font-weight: 400;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    /* 게시글 작성 날짜 */\r\n");
      out.write("    .boardBirth {\r\n");
      out.write("       font-size: 13px;\r\n");
      out.write("       font-weight: 350;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 게시글 작성 날짜 밑에 hr 태그 */\r\n");
      out.write("    .boardBirthHR{\r\n");
      out.write("       border: 0; \r\n");
      out.write("       height: 1px; \r\n");
      out.write("       background-color: #6667AB;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 댓글 form 위에 p 태그 */\r\n");
      out.write("    .boardComment {\r\n");
      out.write("       margin-top: -10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 댓글 등록 버튼 */\r\n");
      out.write("    #boardCommentButton {\r\n");
      out.write("       color: #6667AB; \r\n");
      out.write("       background-color: #f5f5f5; \r\n");
      out.write("       border: none;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 댓글 input 태그 */\r\n");
      out.write("    #boardCommentInput {\r\n");
      out.write("       background-color: transparent; \r\n");
      out.write("       width: 440px; \r\n");
      out.write("       float: left; \r\n");
      out.write("       border: none;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 댓글 form 밑에 공백 div */\r\n");
      out.write("    #boardCommentBlank {\r\n");
      out.write("       margin-top: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 모달 */\r\n");
      out.write("    #exampleModal {\r\n");
      out.write("       height: 540px;\r\n");
      out.write("       margin-top: 200px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #modalContent {\r\n");
      out.write("       border-radius: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #modalHeader {\r\n");
      out.write("       text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #exampleModalLabel {\r\n");
      out.write("       padding-left: 170px;\r\n");
      out.write("       color: #6667AB;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #modalCloseSpan {\r\n");
      out.write("       color: #6667AB;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("</style>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
